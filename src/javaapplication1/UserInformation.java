/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.io.FileReader;
import java.io.*;
import java.util.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
/**
 *
 * @author nizar
 */
public class UserInformation extends javax.swing.JFrame {

    /**
     * Creates new form UserInformation
     */
    public UserInformation() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        DefaultTableModel model;
        String staffName, staffID, phoneNum, username, password;
        try{
            FileReader reader = new FileReader("user.txt");
            BufferedReader br = new BufferedReader(reader);
            model = (DefaultTableModel) tableRegUser.getModel();
            String input;
            
            while((input = br.readLine()) != null){
                StringTokenizer st = new StringTokenizer(input,";");
                staffName = st.nextToken();
                staffID = st.nextToken();
                phoneNum = st.nextToken();
                username = st.nextToken();
                model.insertRow(model.getRowCount(),new Object[]{staffName,staffID,phoneNum,username});
            }
            br.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }          
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnReturn = new javax.swing.JButton();
        labelUsername = new javax.swing.JLabel();
        labelStaffName = new javax.swing.JLabel();
        labelStaffID = new javax.swing.JLabel();
        labelTelNum = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtStaffName = new javax.swing.JTextField();
        txtStaffID = new javax.swing.JTextField();
        txtPhoneNum = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableRegUser = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteMouseClicked(evt);
            }
        });
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnReturn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnReturn.setText("Return");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        labelUsername.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelUsername.setText("Username");

        labelStaffName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelStaffName.setText("Staff Name");

        labelStaffID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelStaffID.setText("Staff ID");

        labelTelNum.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelTelNum.setText("Phone Number");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Registered Users:");

        jLabel2.setFont(new java.awt.Font("Open Sans", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("USER INFORMATION");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel3.setText("*staff ID or username only");

        tableRegUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Staff Name", "Staaff ID", "Phone Number", "Username"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableRegUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableRegUserMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableRegUserMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tableRegUser);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(348, 348, 348))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(133, 133, 133)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(labelTelNum)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labelUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(labelStaffID))
                            .addGap(39, 39, 39)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtStaffID)
                                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(labelStaffName)
                            .addGap(35, 35, 35)
                            .addComponent(txtStaffName, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(4, 4, 4)))
                            .addComponent(btnSearch)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelStaffName)
                                    .addComponent(txtStaffName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtStaffID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelStaffID))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelTelNum))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(106, 106, 106))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        DefaultTableModel model = (DefaultTableModel)tableRegUser.getModel();
        TableRowSorter<DefaultTableModel> tr;
        tr = new TableRowSorter<>(model);
        tableRegUser.setRowSorter(tr);
        String search = txtSearch.getText();
       
        boolean found = false;
        
        try{
            FileReader fr = new FileReader("user.txt");
            BufferedReader br = new BufferedReader(fr);
            String input;

            while((input = br.readLine()) != null){
                StringTokenizer st = new StringTokenizer(input, ";");

                String staffName = st.nextToken();
                String staffID = st.nextToken();
                String phoneNum = st.nextToken();
                String username = st.nextToken();
                
                if(txtSearch.getText().equalsIgnoreCase(username) || txtSearch.getText().equalsIgnoreCase(staffID)) {
                    found = true;
                    tr.setRowFilter(RowFilter.regexFilter(search));
                    txtUsername.setText(username);
                    txtStaffName.setText(staffName);
                    txtPhoneNum.setText(phoneNum);
                    txtStaffID.setText(staffID);
                    JOptionPane.showMessageDialog(null, "User found!");
                    txtSearch.setText("");
                }
                else if(txtSearch.getText().equalsIgnoreCase(staffName) || txtSearch.getText().equalsIgnoreCase(phoneNum)){
                    found = true;
                    JOptionPane.showMessageDialog(null, "Sorry, please enter staff ID or username only.","Message",JOptionPane.ERROR_MESSAGE);
                    txtSearch.setText("");
                }
            }
                       
            if (!found) {
                JOptionPane.showMessageDialog(null, "Sorry, user not found!","Message",JOptionPane.ERROR_MESSAGE); 
                txtSearch.setText("");
            }
            br.close();
        } 
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        this.hide();
        MainMenu menu = new MainMenu();
        menu.setVisible(true);
    }//GEN-LAST:event_btnReturnActionPerformed

    private void tableRegUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableRegUserMouseClicked
        int selectedRow = tableRegUser.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)tableRegUser.getModel();
        txtUsername.setText(model.getValueAt(selectedRow, 3).toString());
        txtStaffName.setText(model.getValueAt(selectedRow, 0).toString());
        txtStaffID.setText(model.getValueAt(selectedRow, 1).toString());
        txtPhoneNum.setText(model.getValueAt(selectedRow, 2).toString());
    }//GEN-LAST:event_tableRegUserMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
         int i = tableRegUser.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)tableRegUser.getModel();
        
        if(i>=0){
            model.setValueAt(txtUsername.getText(), i, 3);
            model.setValueAt(txtStaffName.getText(), i, 0);
            model.setValueAt(txtStaffID.getText(), i, 1);
            model.setValueAt(txtPhoneNum.getText(), i, 2);       
        }
        else{
            JOptionPane.showMessageDialog(null,"Error");
        }
        
        try{
            FileWriter fw = new FileWriter("user.txt");
            BufferedWriter bw = new BufferedWriter(fw);
            
            for(int j=0; j<tableRegUser.getRowCount(); j++){
                for(int k=0; k<tableRegUser.getColumnCount(); k++){
                    bw.write((String)tableRegUser.getModel().getValueAt(j,k)+";");
                }
                bw.write("\n");
            }
            bw.close();
            fw.close();
            JOptionPane.showMessageDialog(null, "Update successful!");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tableRegUserMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableRegUserMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tableRegUserMousePressed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

       /*String tempFile = "temp.txt";
        String filepath = "user.txt";
        File oldFile = new File(filepath);
        File newFile = new File(tempFile);

        String currentLine;
        String data[];
        try{
                FileWriter fw = new FileWriter(tempFile,true);
                BufferedWriter bw = new BufferedWriter(fw);
                PrintWriter pw = new PrintWriter(bw);

                FileReader fr = new FileReader(filepath);
                BufferedReader br = new BufferedReader(fr);

                String staffID = txtStaffID.getText();


                while ((currentLine = br.readLine()) != null){

                    data = currentLine.split(";");

                    if (txtStaffID.equals(data[0])){
                        JOptionPane.showMessageDialog(null, "This data has been deleted");
                    }
                    else
                        pw.println(currentLine);
                }
                pw.flush();
                pw.close();
                fr.close();
                br.close();
                bw.close();
                fw.close();

                oldFile.delete();
                File dump = new File(filepath);
                newFile.renameTo(dump);
            }

            catch (FileNotFoundException fnf) {
                System.out.println(fnf.getMessage());
            }

            catch (EOFException | NumberFormatException eof) {
                System.out.println(eof.getMessage());
            }

            catch (IOException io) {
            System.out.println(io.getMessage());
            }*/
        
        
        DefaultTableModel tblModel=(DefaultTableModel) tableRegUser.getModel();

        //delete row
        if(tableRegUser.getSelectedRowCount()==1){
            //if single row selected so delete
            tblModel.removeRow(tableRegUser.getSelectedRow());
            
            try {
                String staffID = txtStaffID.getText().toString();
                String file_name = "user.txt";
                File file = new File(file_name);

                  if (!file.isFile()) {
                    System.out.println("Parameter is not an existing file");
                    return;
                  }

                  //Construct the new file that will later be renamed to the original filename.
                  File tempFile = new File(file.getAbsolutePath() + ".tmp");

                  BufferedReader br = new BufferedReader(new FileReader(file_name));
                  PrintWriter pw = new PrintWriter(new FileWriter(tempFile));

                  String line = null;

                  //Read from the original file and write to the new
                  //unless content matches data to be removed.
                  while ((line = br.readLine()) != null) {
                      
                    CustomerX customer =  readLine(line);
                    
                    
                    System.out.println("Staff ID: " + customer.getStaffID());
                      
                    if (!customer.getStaffID().equals(staffID)) {
                      pw.println(line);
                      pw.flush();
                    }
                  }
                  
                  pw.close();
                  br.close();

                  //Delete the original file
                  if (!file.delete()) {
                    JOptionPane.showMessageDialog(null, "Could not delete file");
                    return;
                  }

                  //Rename the new file to the filename the original file had.
                  if (!tempFile.renameTo(file)) {
                    JOptionPane.showMessageDialog(null,"Could not rename file");   
                  }
            }
            catch (FileNotFoundException ex) {
              ex.printStackTrace();
            }
            catch (IOException ex) {
              ex.printStackTrace();
            }
            txtUsername.setText("");
            txtStaffID.setText("");
            txtStaffName.setText("");
            txtPhoneNum.setText("");
        }
        else{
            if(tableRegUser.getRowCount()==0){
                //if table is empty(no data)than display message
                JOptionPane.showMessageDialog(this,"Table is empty!");
                }else{
                //if tablle not empty but row is not selected or multiple selected
                JOptionPane.showMessageDialog(this,"Please select single row to delete!");
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    public class CustomerX {
        String name;
        String staffID;
        String phoneNum;
        String user;
        String pass;

        public CustomerX(String name, String staffID, String phoneNum, String user, String pass) {
            this.name = name;
            this.staffID = staffID;
            this.phoneNum = phoneNum;
            this.user = user;
            this.pass = pass;
        }

        public String getName() {
            return name;
        }

        public String getStaffID() {
            return staffID;
        }

        public String getPhoneNum() {
            return phoneNum;
        }

        public String getUser() {
            return user;
        }

        public String getPass() {
            return pass;
        }
    }
    
    private CustomerX readLine(String line) {
        StringTokenizer st = new StringTokenizer(line,";");
        String name = st.nextToken();
        String staffID = st.nextToken();
        String phoneNum = st.nextToken();
        String user  = st.nextToken();
        String pass = st.nextToken();
        
        return new CustomerX(name, staffID, phoneNum, user, pass);
    }
    
    
    private void btnDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteMouseClicked

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new UserInformation().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelStaffID;
    private javax.swing.JLabel labelStaffName;
    private javax.swing.JLabel labelTelNum;
    private javax.swing.JLabel labelUsername;
    private javax.swing.JTable tableRegUser;
    private javax.swing.JTextField txtPhoneNum;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStaffID;
    private javax.swing.JTextField txtStaffName;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
